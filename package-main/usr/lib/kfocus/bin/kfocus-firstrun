#!/bin/bash
#
# Copyright 2020-2023 MindShare Inc.
# Written for the Kubuntu Focus by Michael Mikowski and Erich Eickmeyer
#
# Name    : kfocus-firstrun
# Purpose : Assist every user on first run with the following:
#   1. Position the hints widget correctly for subsequent logins.
#   2. Assist in setting up Cloud services
# License : GPL v2
# Run By  : Users
# Spec    : 2076
#
set -u;

## BEGIN _importCommonFn {
# Imports: _cm2EchoFn _cm2SucStrFn _cm2WarnStrFn _cm2KdiagExe
# Run ls-common-symbols.sh to get this list
#
_importCommonFn () {
  declare _lib_file;
  _lib_file="${_baseDir}/lib/common.2.source";
  if [ -r "${_lib_file}" ]; then
    # shellcheck source=../lib/common.2.source
    source "${_lib_file}" || exit 202;
  else
    echo 1>&2 "${_baseName}: ABORT - Cannot source lib |${_lib_file}|";
    exit 202;
  fi
}
## . END _importCommonFn }

_printHelpFn() {
  cat 1>&2 <<_EOT01

Usage: ${_baseName} [-f] [-h]
   -f: Force run even if run before
   -h: This help message

_EOT01
}

_xtermInstallExtraFn() {
  xterm -fa 'Monospace' -fs 12 -b 28 \
    -geometry 80x24 -T 'Install Extras' \
    -xrm 'xterm*iconHint: /usr/share/pixmaps/kfocus-bug-wizard' \
    -e "${_escExe}" "${_binDir}/kfocus-extra";
}

_xtermRunPhrFn() {
  declare _disk_str _title_str

  _title_str='Reset Passphrase';
  if [ ${#_cryptList[@]} -gt 1 ]; then
    _title_str="${_title_str}s";
  fi

  for _disk_str in "${_cryptList[@]}"; do
    # See https://askubuntu.com/questions/161652
    # Also https://dt.iki.fi/xterm-icon-tweaks
    xterm -fa 'Monospace' -fs 12 -b 28 \
      -geometry 80x24 -T "${_title_str}" \
      -xrm 'xterm*iconHint: /usr/share/pixmaps/kfocus-bug-wizard' \
      -e "${_escExe}" "${_binDir}/kfocus-check-crypt" "${_disk_str}";
  done
}

_checkCryptFn() {
  declare _str;
  _str='';

  if [ "${#_cryptList[@]}" -gt 0 ]; then
    if [ "${#_cryptList[@]}" -gt 1 ]; then
      _str="$(
        cat <<_EOT02
Change Disk Passphrase?
_xtermRunPhrFn
${_cm2HtmPStr}<b>Do you want to change the passphrases on the
${#_cryptList[@]} encrypted disks?</b> This app can test the disks for
default passphrases. If they are found, you will be encouraged to change them
immediately. Remember to save your passphrases in a safe place as your disks
cannot be decrypted or used without them!</p>
${_cm2HtmPStr}<b>Change disk passphrases now?</b><br></p>
_EOT02
      )";
    else
      _str="$(
        cat <<_EOT03
Change Disk Passphrase?
_xtermRunPhrFn
${_cm2HtmPStr}<b>Do you want to change the passphrase on the
encrypted disk?</b> This app can test the disk for the default passphrase.
If it is found, you will be encouraged to change it immediately. Remember
to save your passphrase in a safe place as your disk cannot be decrypted or
used without it!</p>
${_cm2HtmPStr}<b>Change disk passphrase now?</b><br></p>
_EOT03
      )";
    fi
  fi
  echo "${_str}";
}

_runWizardFn() {
  declare _who_str _disable_str _bullet_inet_html _bullet_phr_html \
    _item_phr_html _descr_list _str _count _idx _title_str _app_str \
    _cmd_str _cmd_list _exe_str _descr_str _html_str;

  # 183.2 Skip run if live user 'kubuntu' is detected unless forced
  _who_str=$(whoami)
  if [ "${_who_str}" = 'kubuntu' ]; then
    _disable_str="$(
      cat <<_EOT04
<p style="margin-right:32px;color:#f7941d"><b>This step cannot be run in a
live session</b> due to storage limits. Please install to disk to enable this
option.</p>
_EOT04
    )";
  else
    _disable_str=''
  fi

  _bullet_inet_html='';
  _bullet_phr_html='';
  _item_phr_html='';

  if ! ping -c 1 8.8.8.8; then
    _bullet_inet_html='<li>Connect to Internet</li>';
  fi

  _item_phr_html="$(_checkCryptFn)";
  if [ -n "${_item_phr_html}" ]; then
    _bullet_phr_html='<li>Change Disk Passphrase</li>';
  fi
  _descr_list=();
  _str="$(
    cat <<_EOT05
Welcome to the Kubuntu Focus

${_cm2HtmPStr}Doc: <a href="https://kfocus.org/wf/tools#wizard"
  >https://kfocus.org/wf/tools#wizard</a></p>
${_cm2HtmPStr}<b>This Welcome Wizard helps you get started as
quickly as possible.</b> We have included many tools we feel most developers
should consider. However, this is not an endorsement of any product and the
Focus team is not compensated in any way for these suggestions. You may always
run this wizard later using Start Menu &gt; Kubuntu Focus &gt; Welcome Wizard.</p>

<table style="width:100%;margin:16px 0 8px 0">
  <tr><td style="width:50%">
    <ul style="margin-left:16px">
${_bullet_phr_html}${_bullet_inet_html}
      <li>Install Extra Software</li>
      <li>Explore File Backup</li>
      <li>Start the Password Manager</li>
      <li>Connect to Email</li>
    </ul>
  </td><td>
    <ul style="margin-left:16px">
      <li>Connect to Cloud Drives (2)</li>
      <li>Start JetBrains Toolbox</li>
      <li>Change Your Avatar</li>
      <li>Explore Curated Apps</li>
    </ul>
  </td></tr>
</table>

${_cm2HtmPStr}<b>Click OK to continue</b>.<br></p></html>
_EOT05
  )";
  _descr_list+=("${_str}");

  if [ -n "${_item_phr_html}" ]; then
    _descr_list+=("${_item_phr_html}");
  fi

  if [ -n "${_bullet_inet_html}" ]; then
    _str="$(
      cat <<_EOT06
Connect to the Internet?

${_cm2HtmPStr}<b>This computer does not appear connected to the
internet</b>. Please ensure the network is active by clicking on the
<b>Networks</b> icon in the system tray at the bottom right of the screen.
Once connected, open a browser and confirm you can reach a public website.</p>

${_cm2HtmPStr}<b>Click OK to continue</b>.<br></p>
_EOT06
    )";
    _descr_list+=("${_str}");
  fi

  _str="$(
    cat <<_EOT07
Install Extra Software
_xtermInstallExtraFn
${_cm2HtmPStr}<b>We recommend you install extra software</b> to extend the
capabilities of your system. Some software packages will require a license
agreement. This step can enable features like DVD support, Microsoft Fonts,
 and a few others. You may always revisit this later using Start Menu &gt;
Kubuntu Focus Tools &gt; Extra Software...</p>

${_cm2HtmPStr}<b>Install extra software now?</b><br></p>
_EOT07
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT08
Explore File Backup?
kfocus-mime -k backintime
${_cm2HtmPStr}<b>BackInTime takes snapshots of your home directory</b>. We
configure it to give you a good starting point, but you should review the
settings to ensure it captures all files you want to back up. By default, it
ignores cloud drives and software repos which store data elsewhere. It stores
data to your home disk by default. While this is helpful to protect against
mistakes, it does not protect against disk failure any you may want to change
this. You can find more information at <a
href="https://kfocus.org/wf/backup">https://kfocus.org/wf/backup</a>.</p>

${_cm2HtmPStr}<b>Start BackInTime now?</b><br></p>
_EOT08
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT09
Start the Password Manager?
${_binDir}/kfocus-mime -k keepassxc
${_cm2HtmPStr}<b>KeePassXC, provides encrypted password management</b>. It is
open source software that integrates well with Firefox and Chrome browsers and
has an excellent security record. You may use KeePass2Android or KeePassDX to
sync with your mobile devices. Click on the key icon in the system tray to
configure it. You may always run KeePassXC later from the Start Menu. <b>Once
KeePassXC has started, look in the system tray</b> and click on the KeePass
key icon for options.</p>

${_cm2HtmPStr}<b>Start the password manager now?</b><br></p>
_EOT09
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT10
Connect to Email?
${_binDir}/kfocus-mime -k thunderbird
${_cm2HtmPStr}
<b>Kubuntu offers Thunderbird as the default email and calendar client</b>.
While we have often been fans of Kmail, Thunderbird is easier to set up and
has a wider following. Thunderbird is much faster than web mail clients when
you want to move messages between accounts or sort them quickly. A detailed
guide to configure Thunderbird can be found at <a
href="https://kfocus.org/wf/email"
>https://kfocus.org/wf/email</a>.</p>

${_cm2HtmPStr}<b>Connect to Email now?</b><br></p>
_EOT10
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT11
Connect to Dropbox Cloud Drive?
${_binDir}/kfocus-mime -k dropbox
${_cm2HtmPStr}<b>Dropbox synchronizes cloud storage to a local folder.</b> It
is usually faster and less invasive than other commercial cloud drives. A free
plan provides a modest amount of storage without charge, and you may elect to
purchase additional storage if you wish. You may always install Dropbox later
by installing it from the Curated Apps webpage. <b>Once Dropbox has started,
look in the system tray</b> and click on the Dropbox box icon for options.</p>

${_cm2HtmPStr}<b>Connect to Dropbox cloud drive now?</b><br></p>
_EOT11
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT12
Connect Insync to Cloud Drives?
${_binDir}/kfocus-mime -k insync
${_cm2HtmPStr}<b>Insync synchronizes cloud drives to local folders</b>. This
includes any number of Google Drive or Microsoft OneDrive accounts. Insync is
commercial software that offers a free trial without obligation. We have found
it reliable, convenient, and inexpensive. You may always install Insync later
by installing it from the Curated Apps webpage. <b>Once Insync has started,
look in the system tray</b> and click on the Insync icon for options.</p>

${_cm2HtmPStr}<b>Connect Insync to cloud drives now?</b><br></p>
_EOT12
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT13
Start JetBrains Toolbox?
${_binDir}/kfocus-mime -k jetbrains-toolbox
${_cm2HtmPStr}<b>Manage IDEs with JetBrains Toolbox.</b> You
may use this tool to install, run, update, and remove most of the JetBrains
products. This is commercial software. Many of the IDEs have a free-to-use
Community Edition. Paid editions have more features and usually have a free
trial period. You may always run the toolbox later from the Start Menu.
<b>Please be aware that if you start the Toolbox now, it may take up to 30s
to appear</b>, and in some cases will only show as a purple box in the
system tray that you may click to access.</p>

${_cm2HtmPStr}<b>Start JetBrains Toolbox now?</b><br></p>
_EOT13
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT14
Change Your Avatar?
kcmshell5 kcm_users &
${_cm2HtmPStr}<b>Your avatar is the image shown on the sign-in
screen</b>. You can change your avatar now by clicking on it in the User
Manager interface, or you can do this later by clicking on your avatar
in the Start Menu. If you want to add a custom avatar, <b>please use a
PNG image with the dimensions of 494 x 494 pixels</b> so it will appear
on the sign-in screen.</p>

${_cm2HtmPStr}<b>Change your avatar now?</b><br></p>
_EOT14
  )";
  _descr_list+=("${_str}");

  _str="$(
    cat <<_EOT15
Explore Curated Apps?
${_binDir}/kfocus-web-launcher https://kfocus.org/wf/apps.html &
${_cm2HtmPStr}<b>Please take a few minutes to explore the
Curated Apps</b> you are likely to use daily. Clicking on Yes below will open
a web page showing all of these apps. Click an icon to launch an app
immediately or install it first if needed. You may always view this page later
by visiting the Kubuntu Focus website and navigating to Solutions &gt; Curated
Apps.</p>

${_cm2HtmPStr}<b>Explore Curated Apps now?</b><br></p>
_EOT15
  )";
  _descr_list+=("${_str}");

  ## Begin Loop through autostart {
  _count="${#_descr_list[@]}";
  _idx=0;
  for _app_str in "${_descr_list[@]}"; do
    # Get title and command, split command into array
    _title_str="$(  sed  -n '1 p' <<< "${_app_str}" )";
    _cmd_str="$(    sed  -n '2 p' <<< "${_app_str}" )";
    _descr_str="$(  tail -n+3     <<< "${_app_str}" )";
    read -r -a _cmd_list <<<"${_cmd_str}";
    ((_idx++));
    _title_str+=" (${_idx} of ${_count})";

    _html_str="$( cat <<_EOH1
${_cm2HtmBeginStr}<h3 style="color:#f7941d">${_title_str}</h3>
${_descr_str}${_cm2HtmEndStr}
_EOH1
    )";

    # Handle no-command dialogs with a short-circuit
    if [ "${_cmd_str}" = '' ]; then
      "${_cm2KdiagExe}" --icon 'kfocus-bug-wizard' \
        --title "${_title_str}" \
        --msgbox "${_html_str}";
      continue;
    fi

    # Handle disabled steps with short-circuit
    if [ -n "${_disable_str}" ]; then
      _html_str="$(cat <<_EOH2
${_cm2HtmBeginStr}<h3 style="color:#f7941d">${_title_str}</h3>
${_descr_str}${_disable_str}${_cm2HtmEndStr}
_EOH2
      )";
      "${_cm2KdiagExe}" --icon 'kfocus-bug-wizard' \
        --title "${_title_str}" \
        --msgbox "${_html_str}";
      continue;
    fi

    # Check if command string can be executed
    if echo "${_cmd_list[0]}" | grep -qE '^_'; then
      _cm2SucStrFn 'Internal function found';
    else
      _exe_str=$(command -v "${_cmd_list[0]}")
      if ! [ -x "${_exe_str}" ]; then
        _cm2WarnStrFn "${_exe_str} not found";
        continue;
      fi
    fi

    # Handle application box
    if "${_cm2KdiagExe}" --icon 'kfocus-bug-wizard' \
      --title "${_title_str}" \
      --yesno "${_html_str}"; then
      if eval "${_cmd_str}"; then
        sleep 2;
        _html_str="$(cat <<_EOH3
${_cm2HtmBeginStr}<h4>${_title_str} Was Run</h4>
<p>Click OK to proceed to the next step of the<br>
Kubuntu Focus Welcome Wizard.</p>${_cm2HtmEndStr}
_EOH3
        )";
        "${_cm2KdiagExe}" --icon 'kfocus-bug-wizard' \
          --msgbox "${_html_str}";
      else
        _html_str="$(cat <<_EOH4
${_cm2HtmBeginStr}<h4>${_title_str} Was NOT Run</h4>
<p>If this is unexpected, you may try again later,<br>
as sometimes packages are temporarily unavailable.<p>
<p>Click OK to proceed to the next step of the<br>
Kubuntu Focus Welcome Wizard.</p>${_cm2HtmEndStr}
_EOH4
        )";
        "${_cm2KdiagExe}" --icon 'kfocus-bug-wizard' \
          --msgbox "${_html_str}";
      fi
    fi
  done
  ## . End Loop through autostart }

  # Save timestamp to drop-file if desired
  _html_str="$(
    cat <<_EOH5
${_cm2HtmBeginStr}<h3 style="color:#f7941d">Run Again</h3> <p
style="margin-right:32px">Would you like to run this <b>Welcome
Wizard</b><br>again the next time you sign in?<br></p>
${_cm2HtmEndStr}
_EOH5
  )";
  if "${_cm2KdiagExe}" --icon 'kfocus-bug-wizard' \
    --title "Run Wizard Again?" \
    --yesno "${_html_str}"; then
    "${_cm2RmExe}" -f "${_dropWizardFile}";
  else
    date +%s >"${_dropWizardFile}";
  fi
}

_forceWizardFn() {
  declare _esc_path;
  # Escape any regex special characters
  # See https://unix.stackexchange.com/questions/20804
  # shellcheck disable=2016
  _esc_path="$(printf '%s' "${HOME}/.config" \
    | sed 's/[.[\*^$()+?{|]/\\&/g'
  )";
  if echo "${_dropWizardFile}" | grep -qE "^${_esc_path}"; then
    if [ -e "${_dropWizardFile}" ]; then
      "${_cm2RmExe}" -f "${_dropWizardFile}";
    fi
  fi
}

## BEGIN _mainFn {
_mainFn () {
  declare _dup_str _opt_str;

  # Exit if no kdialog
  if [ -z "${_cm2KdiagExe}" ]; then
    _cm2SetMsgFn 'No kdialog executable found';
    _cm2ErrFn;
  fi

  # Exit if tty-only
  if [ "${_cm2IsTty}" = 'y' ]; then
    _cm2SetMsgFn 'The Welcome Wizard is designed for GUI';
    _cm2ErrFn;
  fi

  ## Begin Exit if another instance is already running
  _cm2SetMsgFn "Check for duplicate ${_baseName} process";
  # shellcheck disable=SC2119
  _dup_str="$(_cm2ChkDupRunFn)";

  if [ -n "${_dup_str}" ]; then
    _cm2WarnStrFn "${_baseName} is already running ${_dup_str}";
    _cm2ErrFn;
  fi
  _cm2SucFn;
  ## . End Exit if another instance is already running

  ## Begin Process Options {
  while getopts ':fh' _opt_str; do
    case "${_opt_str}" in
      h) _printHelpFn; exit 0;;
      f) _forceWizardFn;;
      *) _cm2WarnStrFn "\nInvalid option: -${OPTARG} \n";
         _printHelpFn;
       exit 1;;
    esac
  done
  ## . End Process Options }

  # Run Welcome Wizard if no drop file
  if [ -f "${_dropWizardFile}" ]; then
    _cm2WarnStrFn 'User has directed to not run again. Use -f to override.';
  else
    _runWizardFn;
  fi
}
## . END _mainFn }

## BEGIN Declare global vars {
declare _cryptList _binName _baseName _binDir _baseDir \
  _appIcon _escExe _assignList _setExe;

_setExe='';
_dropWizardFile="${HOME}/.config/kfocus-firstrun-wizard";
## . End Declare global vars }

## Begin Run main if script is not sourced {
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 1;
  _baseName="$( basename "${_binName}" )" || exit 1;
  _binDir="$(   dirname  "${_binName}" )" || exit 1;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 1;
  _appIcon='kfocus-bug-wizard';

  # Get escalation exe
  _importCommonFn;
  _escExe="$(_cm2GetEscExeFn)" || exit;

  _assignList=( "_setExe|${_binDir}/kfocus-firstrun-set" );
  if ! _cm2AssignExeVarsFn "${_assignList[@]}"; then
    _cm2WarnStrFn 'Could not assign variables';
    exit 1;
  fi

  # See SC2207
  mapfile -t _cryptList < <(
    grep 'TYPE="crypto_LUKS"' <<<"$("${_setExe}" 'echo-blkid')" | cut -f1 -d':'
  );
  _mainFn "$@";
fi
## . End Run main if script is not sourced }
